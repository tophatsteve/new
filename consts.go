package main

// README contains the markdown that will be added to the README.md file.
const README = `# [project]

Project [project] generated by gonew.
`

// GOPKG contains the content of the default dep Gopkg.toml file
const GOPKG = `# Gopkg.toml example
#
# Refer to https://golang.github.io/dep/docs/Gopkg.toml.html
# for detailed Gopkg.toml documentation.
#
# required = ["github.com/user/thing/cmd/thing"]
# ignored = ["github.com/user/project/pkgX", "bitbucket.org/user/project/pkgA/pkgY"]
#
# [[constraint]]
#   name = "github.com/user/project"
#   version = "1.0.0"
#
# [[constraint]]
#   name = "github.com/user/project2"
#   branch = "dev"
#   source = "github.com/myfork/project2"
#
# [[override]]
#   name = "github.com/x/y"
#   version = "2.4.0"
#
# [prune]
#   non-go = false
#   go-tests = true
#   unused-packages = true


[prune]
  go-tests = true
  unused-packages = true
`

// TRAVIS contains the content of the default .travis.yml file
const TRAVIS = `language: go
go:
  - "1.10"
`

// PACKAGEFILE contains the content of the package root file
const PACKAGEFILE = `
package [project]

`

// PACKAGEFILETEST contains the tests for the package root file
const PACKAGEFILETEST = `
package [project]

import (
    "testing"
)

func Test[project](t *testing.T) {
    panic("not implemented")
}
`

// CMDFILE contains the content of the package cmd file
const CMDFILE = `
package main

func main() {

}
`

// CMDFILETEST contains the tests for the package cmd file
const CMDFILETEST = `
package main

import (
    "testing"
)

func TestMain(t *testing.T) {
  panic("not implemented")
}
`
